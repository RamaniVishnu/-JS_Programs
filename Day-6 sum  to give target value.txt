for pair
function findAllPairsWithIndexes(arr, target) {
    let pairs = [];
    let seenIndexes = new Set(); // Track unique index pairs
    for (let i = 0; i < arr.length; i++) {
        for (let j = i + 1; j < arr.length; j++) {
            if (arr[i] + arr[j] === target) {
                let indexKey = [i,j]; // Unique key based on indexes

                // Ensure the same number pair isn't added twice with different indexes
                if (!seenIndexes.has(indexKey)) {
                    seenIndexes.add(indexKey);
                    pairs.push({ pair: [arr[i], arr[j]], indexes: [i, j] });
                }
            }
        }
    }

    return pairs.length ? pairs : "No pairs found!";
}

// let a = [2, 4, 5, 3, 6, 7, 8, 10, 2, 5, 1];
// let targetValue = 8;
console.log(findAllPairsWithIndexes(a, targetValue));


for triplets
function findAllPairsWithIndexes(arr,target){
    let pairs=[];
    let uniqueVal = new Set();
    for(let i=0;i<arr.length - 2;i++){
        for(let j=i+1;j<arr.length - 1;j++){
            for(let k=j+1;k<arr.length;k++){
            if(a[i] + a[j]+ a[k] === target){
                let indexKey = [i,j,k];
                if(!uniqueVal.has(indexKey)){
                    uniqueVal.add(indexKey);
                    pairs.push({pair: [a[i],a[j],a[k]],index: [i,j,k]})
                    }
                }
            }
        }
    }
    return pairs.length ? pairs : 'no pair found'
}
let a = [2, 4, 5, 3, 6, 7, 8, 10, 2, 5, 1];
let targetValue = 10;
console.log(findAllPairsWithIndexes(a, targetValue));
